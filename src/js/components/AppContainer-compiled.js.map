{"version":3,"sources":["AppContainer.jsx"],"names":[],"mappings":";;;;;;;;qBAAkB,OAAO;;;;mCACC,yBAAyB;;;;mCAC3B,0BAA0B;;;;kDACxB,wCAAwC;;;;sBAClD,WAAW;;;;qBAEZ,mBAAM,WAAW,CAAC;;;;;;;;;;;;;;;;;;;AAiBhC,UAAS,EAAA,qBAAG;AACT,MAAI,CAAC,QAAQ,CAAC,iCAAc,MAAM,EAAE,CAAC,CAAC;AACvC,MAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,iCAAY,MAAM,EAAE,EAAC,CAAC,CAAC;EAC9C;;AAED,gBAAe,EAAA,2BAAG;AAChB,SAAO;AACN,YAAS,EAAE,gDAAc,sBAAsB,EAAE;AACjD,QAAK,EAAE,CAAC;AACR,SAAM,EAAE,EAAE;AACV,eAAY,EAAE,KAAK;AACnB,gBAAa,EAAC,KAAK;GACnB,CAAC;EACH;;AAED,kBAAiB,EAAA,6BAAG;AACnB,mCAAc,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChD,mCAAY,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EAC9C;;AAED,qBAAoB,EAAA,gCAAG;AACtB,mCAAc,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,mCAAY,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;EACjD;;;;;;;AAOF,YAAW,EAAA,uBAAG;;;AAGb,MAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACjD,MAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;;AAEzC,MAAG,IAAI,CAAC,MAAM,KAAK,CAAC,EAAC;;AAEpB,OAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAS,GAAG,EAAE,GAAG,EAAC;AACzC,OAAG,IAAK,CAAC,SAAS,CAAC,GAAG,CAAC,AAAC,CAAC;AACzB,WAAO,GAAG,CAAC;IACX,EAAC,CAAC,CAAC,CAAC;;AAEJ,OAAI,CAAC,QAAQ,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;AACrC,OAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;;;GAI/B,MAAI;AACJ,OAAI,CAAC,QAAQ,CAAC,EAAC,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC;GACpC;EACD;;AAED,OAAM,EAAA,kBAAG;eACgD,IAAI,CAAC,KAAK;MAA3D,SAAS,UAAT,SAAS;MAAE,YAAY,UAAZ,YAAY;MAAE,aAAa,UAAb,aAAa;MAAE,KAAK,UAAL,KAAK;;AACnD,SACC;AACC,UAAO,EAAE,IAAI,CAAC,WAAW,AAAC;AAC1B,YAAS,EAAE,SAAS,AAAC;AACrB,UAAO,EAAE,YAAY,AAAC;AACtB,WAAQ,EAAE,aAAa,AAAC;AACxB,uBAAoB,EAAE,IAAI,CAAC,kBAAkB,AAAC;AAC9C,oBAAiB,EAAE,IAAI,CAAC,eAAe,AAAC;AACvC,QAAK,EAAE,KAAK,AAAC;IACZ,CACF;EACF;CACF,CAAC","file":"AppContainer-compiled.js","sourcesContent":["import React from 'react';\nimport QuestionStore from '../stores/QuestionStore';\nimport AnswerStore from '../stores/AnswerStore.js';\nimport ActionCreator from '../actions/QuestionnaireActionCreators';\nimport App from './App.jsx';\n\nexport default React.createClass({\n\t/*\n\t * attempted validation, fail\n\t */\n\t//propTypes: {\n\t//\t// You can also specify a custom validator. It should return an Error\n\t//\t// object if the validation fails. Don't `console.warn` or throw, as this\n\t//\t// won't work inside `oneOfType`.\n\t//\tscores: function(props, propName, componentName) {\n\t//\t\tvar keys = Object.keys(props[scores]);\n\t//\t\tif(keys.length === 9){\n\t//\t\t//if (!/matchme/.test(props[propName])) {\n\t//\t\t\treturn new Error('Validation failed!');\n\t//\t\t}\n\t//\t}\n\t//},\n\n\t_onChange() {\n    this.setState(QuestionStore.getAll());\n\t  this.setState({scores: AnswerStore.getAll()});\n  },\n\n  getInitialState() {\n    return {\n\t    questions: ActionCreator.getQuestionsFromServer(),\n\t    score: 0,\n\t    scores: {},\n\t    alertVisible: false,\n\t    resultVisible:false\n    };\n  },\n\n  componentDidMount() {\n\t  QuestionStore.addChangeListener(this._onChange);\n\t  AnswerStore.addChangeListener(this._onChange);\n  },\n\n  componentWillUnmount() {\n\t  QuestionStore.removeChangeListener(this._onChange);\n\t  AnswerStore.removeChangeListener(this._onChange);\n  },\n\n\t/*\n\t * method that will handle submit button and determine which view to display,\n\t * probably would be refactored to hold business logic away from client, but outside of\n\t * scope of current assignment\n\t */\n\thandleTally() {\n\t\t//var scores = AnswerStore.getAll()\n\n\t\tvar keys = Object.keys(this.state.scores.scores);\n\t\tvar allScores = this.state.scores.scores;\n\t\t// make sure all questions are answered.\n\t\tif(keys.length === 9){\n\t\t\t// calculates score.\n\t\t\tvar score = keys.reduce(function(sum, key){\n\t\t\t\tsum += (+allScores[key]);\n\t\t\t\treturn sum;\n\t\t\t},0);\n\t\t\t//if(score > 10){\n\t\t\t\tthis.setState({resultVisible: true});\n\t\t\t\tthis.setState({score: score});\n\t\t\t//}\n\t\t\t//ActionCreator.tally(score);\n\n\t\t}else{\n\t\t\tthis.setState({alertVisible: true});\n\t\t}\n\t},\n\n\trender() {\n    let {questions, alertVisible, resultVisible, score} = this.state;\n\t\t\treturn (\n\t\t\t\t<App\n\t\t\t\t\tonTally={this.handleTally}\n\t\t\t\t\tquestions={questions}\n\t\t\t\t\tonAlert={alertVisible}\n\t\t\t\t\tonResult={resultVisible}\n\t\t\t\t\tonHandleAlertDismiss={this.handleAlertDismiss}\n\t\t\t\t\tonHandleAlertShow={this.handleAlertShow}\n\t\t\t\t  score={score}\n\t\t\t\t\t/>\n\t\t\t);\n  }\n});\n"]}