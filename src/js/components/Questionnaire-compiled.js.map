{"version":3,"sources":["Questionnaire.jsx"],"names":[],"mappings":";;;;;;;;qBAAkB,OAAO;;;;2BACJ,gBAAgB;;;;0CACf,+BAA+B;;;;sCACnC,2BAA2B;;;;qBAE9B,mBAAM,WAAW,CAAC;;;AAC/B,iBAAe,EAAA,2BAAG;AAChB,WAAO;AACL,eAAS,EAAE,EAAE;KACd,CAAC;GACH;;AAED,QAAM,EAAA,kBAAG;QACF,SAAS,GAAI,IAAI,CAAC,KAAK,CAAvB,SAAS;;AAChB,WAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;AACxC,QAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,aACE;;UAAO,OAAO,EAAC,SAAS;QACtB;;;;SAAkC;;OAC5B,CACR;KACH;;AAED,WACE;;;MACE;;;QACG,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ;iBACrB,6DAAU,QAAQ,EAAE,QAAQ,AAAC,EAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,AAAC,GAAE;SAAA,CAClD;OACS;KACP,CACP;GACH;CACF,CAAC","file":"Questionnaire-compiled.js","sourcesContent":["import React from 'react';\nimport Question from './Question.jsx';\nimport ListGroup from 'react-bootstrap/lib/ListGroup';\nimport Alert from 'react-bootstrap/lib/Alert';\n\nexport default React.createClass({\n  getDefaultProps() {\n    return {\n      questions: []\n    };\n  },\n\n  render() {\n    let {questions} = this.props;\n\t\tconsole.log('in questionaire', questions);\n    if (questions.length === 0) {\n      return (\n        <Alert bsStyle=\"warning\">\n          <strong>You have no tasks</strong> Create some using the Add New button below.\n        </Alert>\n      );\n    }\n\n    return (\n      <form>\n        <ListGroup>\n          {questions.map(question =>\n            <Question question={question} key={question.id}/>\n          )}\n        </ListGroup>\n      </form>\n    );\n  }\n});\n"]}